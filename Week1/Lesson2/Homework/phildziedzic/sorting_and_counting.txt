## 1. Looking things up

Your address book/contacts app stores every contact that you have on your phone in alphabetical order by first name. Each record contains a `name`, `cell_phone`, and `home_phone` record. You need to call your friend Drew on his *cell phone* but don't remember his phone number. Using computational thinking, what are the steps to look up Drew's information and pull out his cell phone number? Use psuedo code to describe your answer.

///////////////////
ANSWER:

create search_term

prompt user for search_term
for each letter typed
	return all names that meet the search criteria
	if user selects one of the returned names within 10 seconds
		return all numbers for that name
			if user selects number within 10 seconds
				place phone call to selected number
			else
				close numbers and return to search results
	else
		close search results and return user to input dialogue








## 2. Counting things

You've been given a list of the names of politicians and celebrities. You need to count how many celebrities are in the list while skipping over politicians. Using computational thinking, list the steps needed to iterate over each item in the list and increment a counter when the current name on the list is a celebrity.

Assumptions and tips:

- Let's assume there's a function called `is_celebrity?` that will return `true` or `false` based on whether the name you give it is that of a celebrity
- The list of names are: `['Kim Kardashian', 'Hulk Hogan', 'Kermit the Frog', 'Donald Trump', 'Matt Lauer', 'Barack Obama', 'Hillary Clinton']`

////////////////////
ANSWER:

create celeb_count

for each name
	pass the name to is_celebrity
		if true
			celeb_count += 1
		else
			skip to next name

output celeb_count




## 3. Sorting Things

You have a list of names. Some of these are male and some are female. From the master list, create 2 new lists. One list will contain only the male names and the second list will contain only female names. Describe the steps involved using computational thinking and write out your answer in psuedo code.

Assumptions and tips:

- Assume there's a function called `is_female_name?` that will return `true` when the name you give it is female and `false` when the name you pass it belongs to a male.
- The list of names are `['Kim Kardashian', 'Hulk Hogan', 'Kermit the Frog', 'Donald Trump', 'Matt Lauer', 'Barack Obama', 'Hillary Clinton']`

/////////////////////
ANSWER:

create master_list
create male_list
create female_list

for each name
	pass the name to the is_female_name function
	if returns true
		add name to female_list
	else
		add name to male_list

output male_list
output female_list